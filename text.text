<template>
  <v-card>
    <v-toolbar dark color="primary">
      <v-btn icon dark @click="onClose">
        <v-icon>mdi-close</v-icon>
      </v-btn>
      <v-toolbar-title>New Article</v-toolbar-title>
      <v-spacer></v-spacer>
      <v-toolbar-items>
        <v-btn dark text @click="onSave">Save</v-btn>
      </v-toolbar-items>
    </v-toolbar>
    <v-card-text>
      <v-container fluid>
        <v-row class="mt-2">
          <v-col cols="2" class="pa-1">
            <v-text-field label="Author*" dense required v-model='authorInputValue' readonly></v-text-field>
          </v-col>         
          <v-col cols="8" class="pa-1">
            <v-text-field label="Title*" dense required v-model="titleInputValue"></v-text-field>
          </v-col>
          <v-col cols="1" class="pa-1">
            <v-switch v-model="isReviewed" :label="'Active'" dense class="ml-4"></v-switch>
          </v-col>
          <v-col cols="6" class="pa-1">
            <v-select v-model="tagValue" :items="items" attach chips label="Tags" dense multiple></v-select>
          </v-col>
          <v-col md="6"></v-col>
                    
          <v-col cols="12" class="pa-1">
            <p>Content*:</p>
            <editor-component class="editor-wrapper" ref="editor"></editor-component>
          </v-col>
        </v-row>
      </v-container>
    </v-card-text>
  </v-card>
</template>

<script>
import Editor from "../Editor/Editor";
import axios from 'axios';

export default {
  props:{
    closeDialog: Function
  },
  components: {
    "editor-component": Editor
  },
  data: (vm) => ({
    items: ["javascript", "vuejs", "css", "typescript", "react", "angular"],
    tagValue: [],
    isReviewed: false,
    titleInputValue: '',
    authorInputValue: vm.$store.state.usN 
  }),
  watch:{
    $route(){
      this.tagValue = this.$route.query.type ? [ this.$route.query.type ] : []
    }
  },
  mounted(){
    this.tagValue = this.$route.query.type ? [ this.$route.query.type ] : []
  },
  methods: {
    onClose(){
      this.$emit('closeDialog')
    },
    onSave(){
      axios.post(this.$store.state.dbUrl + '/article', {
        authorId: this.$store.state.usId,
        title: this.titleInputValue,
        tags: this.tagValue.join(','),
        content: this.$refs.editor.editor.getHTML(),
        isReviewed: this.isReviewed,
        createDate: Date.now()
      }).then(res => {
        console.log(res)
      }).catch(err => {
        console.log(err)
      })
    }
  }
};
</script>

<style lang="scss" scoped>
.editor-wrapper {
  border: 1px solid #aacfec;
  border-radius: 10px;
  margin: 0 !important;
  padding: 20px;
}
</style>